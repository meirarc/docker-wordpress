AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Sample Template WordPress_Single_Instance


Metadata:
  License: Apache-2.0
  AWS::CloudFormation::Interface:
    
    ParameterGroups:
      - Label:
          default: "Wordpress"
        Parameters:
          - WPTitle
          - WPAdminUser
          - WPAdminPassword
          - WPAdminEmail
      
      - Label:
          default: "Wordpress Configuration" 
        Parameters:
          - BlogDescription
          - UsersCanRegister
          - TimezoneString
          - PermalinkStructure

      - Label:
          default: "Database"
        Parameters:
          - DBName
          - DBUser
          - DBPassword
          - DBRootPassword
      
      - Label:
          default: "Instance connection"
        Parameters:
          - InstanceType
          - KeyName

Parameters:

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: demo
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro

  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
  DBPassword:
    Default: peBRqjmNppXuH4G7
    Description: The WordPress database admin account password
    NoEcho: 'true'
    Type: String
  DBRootPassword:
    Default: NxAaPyjrWQm7aQVx
    Description: MySQL root password
    NoEcho: 'true'
    Type: String
  DBUser:
    Default: ucvbyeev
    Description: The WordPress database admin account username
    Type: String
  
  WPTitle: 
    Default: 'Site do Rafael'
    Description: The WordPress website title
    Type: String
  WPAdminUser:
    Default: 'rafael.cabrera'
    Description: The WordPress Admin User
    Type: String
  WPAdminPassword:
    Default: 'rafael.cabrera'
    NoEcho: 'true'
    Description: The WordPress Admin Password
    Type: String
  WPAdminEmail:
    Default: 'rafael.cabrera.demo1@gmail.com'
    Description: 'The WordPress Admin Email'
    Type: String
  
  BlogDescription:
    Default: 'Wordpress blogline Description'
    Description: 'Wordpress blogline Description'
    Type: String
  UsersCanRegister:
    Default: '1'
    Description: 'Membership allowed'
    Type: String
  TimezoneString:
    Default: 'America/Sao_Paulo'
    Description: 'Membership allowed'
    Type: String
  PermalinkStructure:
    Default: '/%postname%/'
    Description: 'Permalink Structure'
    Type: String
  
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: HVM64
    c1.xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATHVM64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
    m1.small:
      Arch: NATHVM64
    m1.medium:
      Arch: NATHVM64
    m1.large:
      Arch: NATHVM64
    m1.xlarge:
      Arch: NATHVM64
    m2.xlarge:
      Arch: NATHVM64
    m2.2xlarge:
      Arch: NATHVM64
    m2.4xlarge:
      Arch: NATHVM64
    m3.medium:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m3.2xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    c1.medium:
      Arch: NATHVM64
    c1.xlarge:
      Arch: NATHVM64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    af-south-1:
      HVM64: ami-064cc455f8a1ef504
      HVMG2: NOT_SUPPORTED
    ap-east-1:
      HVM64: ami-f85b1989
      HVMG2: NOT_SUPPORTED
    ap-northeast-1:
      HVM64: ami-0b2c2a754d5b4da22
      HVMG2: ami-09d0e0e099ecabba2
    ap-northeast-2:
      HVM64: ami-0493ab99920f410fc
      HVMG2: NOT_SUPPORTED
    ap-northeast-3:
      HVM64: ami-01344f6f63a4decc1
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-03cfb5e1fb4fac428
      HVMG2: ami-0244c1d42815af84a
    ap-southeast-1:
      HVM64: ami-0ba35dc9caf73d1c7
      HVMG2: ami-0e46ce0d6a87dc979
    ap-southeast-2:
      HVM64: ami-0ae99b503e8694028
      HVMG2: ami-0c0ab057a101d8ff2
    ca-central-1:
      HVM64: ami-0803e21a2ec22f953
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-07a3f215cc90c889c
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      HVM64: ami-0a3b3b10f714a0ff4
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-0474863011a7d1541
      HVMG2: ami-0aa1822e3eb913a11
    eu-north-1:
      HVM64: ami-0de4b8910494dba0f
      HVMG2: ami-32d55b4c
    eu-south-1:
      HVM64: ami-08427144fe9ebdef6
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-015232c01a82b847b
      HVMG2: ami-0d5299b1c6112c3c7
    eu-west-2:
      HVM64: ami-0765d48d7e15beb93
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-0caf07637eda19d9c
      HVMG2: NOT_SUPPORTED
    me-south-1:
      HVM64: ami-0744743d80915b497
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-0a52e8a6018e92bb0
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-032930428bf1abbff
      HVMG2: ami-0aeb704d503081ea6
    us-east-2:
      HVM64: ami-027cab9a7bf0155df
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-088c153f74339f34c
      HVMG2: ami-0a7fc72dc0e51aa77
    us-west-2:
      HVM64: ami-01fee56b22f308154
      HVMG2: ami-0fe84a5b4563d8f27

Resources:

  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 locked down to the load balancer + SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  WebServer:
    Type: 'AWS::EC2::Instance'
    
    Metadata:
      'AWS::CloudFormation::Init':
        
        configSets:
          wordpress_install:
            - install_cfn
            - install_wordpress
            - configure_wordpress

        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - |
                    path=Resources.WebServer.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServer '
                  - '         --configsets wordpress_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        
        install_wordpress:
          packages:
            yum:
              php73: []
              php73-mysqlnd: []
              mysql57: []
              mysql57-server: []
              mysql57-devel: []
              mysql57-libs: []
              httpd24: []
          sources:
            /var/www/html: 'http://wordpress.org/latest.tar.gz'
          
          files:
            
            /tmp/setup.mysql:
              content: !Sub |
                CREATE DATABASE ${DBName};
                CREATE USER '${DBUser}'@'localhost' IDENTIFIED BY '${DBPassword}';
                GRANT ALL ON ${DBName}.* TO '${DBUser}'@'localhost';
                FLUSH PRIVILEGES;
              mode: '000400'
              owner: root
              group: root
            
            /tmp/create-wp-config:
              content: !Sub |
                #!/bin/bash -ex
                cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php
                sed -i 's/database_name_here/${DBName}/g' /var/www/html/wordpress/wp-config.php
                sed -i 's/username_here/${DBUser}/g' /var/www/html/wordpress/wp-config.php
                sed -i 's/password_here/${DBPassword}/g' /var/www/html/wordpress/wp-config.php
              mode: '000500'
              owner: root
              group: root
            
            /tmp/change_owners:
              content: !Sub |
                #!/bin/bash -ex
                sudo chown -R apache:apache /var/www/html/wordpress
                sudo curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                sudo php wp-cli.phar --info
                chmod +x wp-cli.phar
                sudo mv wp-cli.phar /usr/local/bin/wp
                sudo chmod -R 777 /var/www/html/wordpress
              mode: '000500'
              owner: root
              group: root

            /tmp/wp-core-install:
              content: !Sub |
                #!/bin/bash -ex
                my_ip=$(curl http://checkip.amazonaws.com)
                /usr/local/bin/wp core install --url=http://$my_ip/wordpress --title='${WPTitle}' --admin_user='${WPAdminUser}' --admin_password='${WPAdminPassword}' --admin_email='${WPAdminEmail}' --allow-root --path=/var/www/html/wordpress/
              mode: '000777'
              owner: root
              group: root
            
            /tmp/wp-plugin-install:
              content: !Sub |
                #!/bin/bash -ex
                /usr/local/bin/wp plugin delete akismet --allow-root
                /usr/local/bin/wp plugin delete hello --allow-root
                
                /usr/local/bin/wp plugin install woocommerce --allow-root
                /usr/local/bin/wp plugin install elementor --allow-root
                /usr/local/bin/wp plugin install wp-mail-smtp --allow-root
                # /usr/local/bin/wp plugin install akismet --allow-root

                # /usr/local/bin/wp plugin activate woocommerce --allow-root
                # /usr/local/bin/wp plugin activate elementor --allow-root
                # /usr/local/bin/wp plugin activate akismet --allow-root
                /usr/local/bin/wp plugin activate wp-mail-smtp --allow-root
                
                /usr/local/bin/wp theme install kadence --activate --allow-root
                
                /usr/local/bin/wp theme delete twentytwentyone --allow-root
                /usr/local/bin/wp theme delete twentytwentythree --allow-root
                /usr/local/bin/wp theme delete twentytwentytwo --allow-root
                
                /usr/local/bin/wp post delete 1 --allow-root
                /usr/local/bin/wp post delete 2 --allow-root
                

              mode: '000777'
              owner: root
              group: root
            
            /tmp/wp-update-configuration:
              content: !Sub |
                #!/bin/bash -ex
                /usr/local/bin/wp option update blogdescription "${BlogDescription}"  --allow-root
                /usr/local/bin/wp option update users_can_register ${UsersCanRegister} --allow-root
                /usr/local/bin/wp option update timezone_string "${TimezoneString}" --allow-root
                
              mode: '000777'
              owner: root
              group: root
          
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'
        
        configure_wordpress:
          commands:
            01_set_mysql_root_password:
              command: !Sub mysqladmin -u root password ${DBRootPassword}
              test: !Sub $(mysql ${DBName} -u root --password='${DBRootPassword}' >/dev/null 2>&1 </dev/null); (( $? != 0 ))
            02_create_database:
              command: !Sub mysql -u root --password='${DBRootPassword}' < /tmp/setup.mysql
              test: !Sub $(mysql ${DBName} -u root --password='${DBRootPassword}' >/dev/null 2>&1 </dev/null); (( $? != 0 ))
            03_configure_wordpress:
              command: /tmp/create-wp-config
              cwd: /var/www/html/wordpress
            04_change_owners:
              command: /tmp/change_owners
              cwd: /tmp
            05_wp-core-install:
              command: /tmp/wp-core-install
              cwd: /tmp
            06_wp-plugin-install:
              command: /tmp/wp-plugin-install
              cwd: /var/www/html/wordpress
            07_wp-update-configuration:
              command: /tmp/wp-update-configuration
              cwd: /var/www/html/wordpress
            
              

    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
      UserData: !Base64
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           
           sudo yum update -y aws-cfn-bootstrap
           /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource WebServer --configsets wordpress_install --region ${AWS::Region}
           /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource WebServer --region ${AWS::Region}
  
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M

Outputs:
  WebsiteURL:
    Value: !Sub 'http://${WebServer.PublicDnsName}/wordpress'
    Description: WordPress Website
  SSHConnection:
    Value: !Sub "ssh -i demo.pem ec2-user@${WebServer.PublicDnsName}"
    Description: SSH Connection
  WebsiteAdmin:
    Value: !Sub 'http://${WebServer.PublicDnsName}/wordpress/wp-admin'
    Description: WordPress Admin 
